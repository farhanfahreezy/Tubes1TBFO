Terminals:
! # % ( ) * + - , / : < = > . [ ] _ { } ' " let true false if else return throw case switch default for while try catch finally continue null const var function break
Variables:
SS NUMBER STRING VARIABLE RELATION OPASSIGN OPERATOR TAMBAHALL TAMBAHVAL TAMBAHSTR TAMBAHVAR ASSALL ASSVAL ASSSTR ASSBOL ASSVAL PARA FUNCTION COND_STATEMENT SCOPE SCOPE_LOOP IF IF_HEADER ELIF_HEADER IF_VAR ELSE SWITCH SWITCH_VAR SWITCH_BODY CASE DEFAULT RETURN BREAK CONST THROW DELETE VAR LET FUNDEC FUNCTION FOR FOR_HEADER FOR_VAR FOR_VAR_INIT FOR_VAR_COND FOR_VAR_AFTR WHILE WHILE_HEADER WHILE_VAR TRY TRY_COMPLETE TRY_WO_FINALLY TRY_WO_CATCH TRY_HEADER CATCH_HEADER FINALLY_HEADER BOOLEAN LETS TRUES FALSES IFS ELSES RETURNS THROWS CASES SWITCHS DEFAULTS FORS WHILES TRYS CATCHS FINALLYS CONTINUES NULLS CONSTS VARS FUNCTIONS BREAKS SERU HASHTAG MOD NBO NBC MUL POW PLUS MIN INC DEC COMMA DIVIDE COLON LESS EQUAL GREAT POINT SBO SBC CBO CBC PETIK1 PETIK2 COMMENT COMMENTS COMMENTML COMMENTMLO COMMENTMLC
Productions:
SS -> SS SS | IF | WHILE | FOR | FUNCTION | CONST | DELETE | LET | SWITCH | THROW | TRY | VAR | COMMENT | COMMENTML;
COMMENT -> COMMENTS VARIABLE | COMMENTS COMMENT;
COMMENTML -> COMMENTMLO SS COMMENTMLC;
NUMBER -> number;
STRING -> PETIK2 string PETIK2 | PETIK1 string PETIK1;
VARIABLE -> variable;
RELATION -> GREAT EQUAL | LESS EQUAL | EQUAL EQUAL | SERU EQUAL | LESS | GREAT | ISS | ISS NOTS | INS | NOTS INS;
OPASSIGN -> EQUAL | MOD EQUAL | MUL EQUAL | POW EQUAL | PLUS EQUAL | MIN EQUAL | DIVIDE EQUAL;
OPERATOR -> MOD | MUL | POW | PLUS | MIN | DIVIDE;
TAMBAHALL -> TAMBAHALL TAMBAHALL | TAMBAHVAL | TAMBAHVAR
TAMBAHVAL -> TAMBAHVAL TAMBAHVAL | OPERATOR NUMBER;
TAMBAHSTR -> TAMBAHSTR TAMBAHSTR | PLUS STRING;
TAMBAHVAR -> TAMBAHVAR TAMBAHVAR | OPERATOR VARIABLE;
ASSALL -> ASSVAL | ASSSTR | ASSBOL | ASSVAR;
ASSVAL -> VARIABLE OPASSIGN NUMBER | VARIABLE OPASSIGN NUMBER TAMBAHALL | VARIABLE OPASSIGN MIN NUMBER TAMBAHALL;
ASSSTR -> VARIABLE EQUAL STRING | VARIABLE EQUAL STRING TAMBAHSTR | VARIABLE PLUS EQUAL STRING TAMBAHSTR;
ASSBOL -> VARIABLE EQUAL BOOLEAN | VARIABLE EQUAL NUMBER RELATION NUMBER | VARIABLE EQUAL STRING RELATION STRING | VARIABLE EQUAL VARIABLE RELATION VARIABLE;
ASSVAR -> VARIABLE OPASSIGN VARIABLE | VARIABLE OPASSIGN VARIABLE TAMBAHALL;
PARA -> NUMBER | STRING | BOOLEAN | VARIABLE | ASSBOL | PARA COMMA PARA;
FUNCTIONS -> function;
COND_STATEMENT -> BOOLEAN | VARIABLE RELATION NUMBER | VARIABLE RELATION VARIABLE | VARIABLE EQUAL EQUAL BOOLEAN | VARIABLE SERU EQUAL BOOLEAN;
SCOPE -> CBO SS CBC;
SCOPE_LOOP -> SCOPE | CBO SS BREAK SS CBC | CBO SS CONTINUE SS CBC;
IF -> IF_HEADER SCOPE | IF ELIF_HEADER SCOPE | IF ELSE SCOPE;
IF_HEADER -> IFS IF_VAR;
ELIF_HEADER -> ELSES IF_HEADER;
IF_VAR -> NBO COND_STATEMENT NBC;
ELSE -> ELSES;
SWITCH -> SWITCHS SWITCH_VAR CBO SWITCH_BODY CBC;
SWITCH_VAR -> NBO VARIABLE NBC;
SWITCH_BODY -> CASE SS BREAK | SWITCH_BODY CASE SS BREAK | SWITCH_BODY DEFAULT SS;
CASE -> CASES STRING COLON | CASES NUMBER COLON;
DEFAULT -> DEFAULTS;
RETURN -> RETURNS VARIABLE | RETURNS BOOLEAN | RETURNS NUMBER | RETURNS STRING;
BREAK -> BREAKS
CONST -> CONSTS ASSALL;
THROW -> THROWS NUMBER | THROWS STRING | THROWS BOOLEAN;
DELETE -> DELETES SBO VARIABLE SBC | DELETES VARIABLE POINT VARIABLE | DELETES VARIABLE;
VAR -> VARS ASSALL | ASSALL;
LET -> LETS ASSALL;
FUNDEC -> FUNCTIONS FUNCTION SCOPE | FUNCTIONS FUNCTION CBO SS RETURN CBC;
FUNCTION -> VARIABLE NBO FUNCTION NBC | VARIABLE NBO PARA NBC | VARIABLE NBO NBC;
FOR -> FOR_HEADER SCOPE_LOOP;
FOR_HEADER -> FORS FOR_VAR;
FOR_VAR -> NBO FOR_VAR_INIT EL FOR_VAR_COND EL FOR_VAR_AFTR NBC;
FOR_VAR_INIT -> LET | ASSVAL;
FOR_VAR_COND -> VARIABLE RELATION NUMBER | VARIABLE RELATION VARIABLE;
FOR_VAR_AFTR -> VARIABLE INC | VARIABLE DEC;
WHILE -> WHILE_HEADER SCOPE_LOOP;
WHILE_HEADER -> WHILES WHILE_VAR;
WHILE_VAR -> NBO COND_STATEMENT NBC;
TRY -> TRY_WO_FINALLY | TRY_WO_CATCH | TRY_COMPLETE;
TRY_COMPLETE -> TRY_HEADER SCOPE CATCH_HEADER SCOPE FINALLY_HEADER SCOPE;
TRY_WO_FINALLY -> TRY_HEADER SCOPE CATCH_HEADER SCOPE;
TRY_WO_CATCH -> TRY_HEADER SCOPE FINALLY_HEADER SCOPE;
TRY_HEADER -> TRYS;
CATCH_HEADER -> CATCHS NBO VARIABLE NBC;
FINALLY_HEADER -> FINALLYS;
BOOLEAN -> TRUES | FALSES;
LETS -> let;
TRUES -> true;
FALSES -> false;
IFS -> if;
ELSES -> else;
RETURNS -> return;
THROWS -> throw;
CASES -> case;
SWITCHS -> switch;
DEFAULTS -> default;
FORS -> for;
WHILES -> while;
TRYS -> try;
CATCHS -> catch;
FINALLYS -> finally;
CONTINUES -> continue;
NULLS -> null;
CONSTS -> const;
VARS -> var;
FUNCTIONS -> function
BREAKS -> break;
COMMENTS -> / /;
COMMENTMLO -> / *;
COMMENTMLC -> * /;
SERU -> !;
HASHTAG -> #;
MOD -> %;
NBO -> (;
NBC -> );
MUL -> *;
POW -> * *;
PLUS -> +;
MIN -> -;
INC -> + +;
DEC -> - -;
COMMA -> ,;
DIVIDE -> /;
COLON -> :;
LESS -> <;
EQUAL -> =;
GREAT -> >;
POINT -> .;
SBO -> [;
SBC -> ];
CBO -> {;
CBC -> };
PETIK1 -> ';
PETIK2 -> "